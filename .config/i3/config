# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).

#so i3 nows it's reading a conf file with the new format
# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet


# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill


# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# default binding --->>> bindsym $mod+semicolon focus right 

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
# default binding --->>> bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+z split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10


# move focused container to workspace and move focus itself to the contained
bindsym $mod+Shift+1 move container to workspace number $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10; workspace $ws10

# reload the configuration file
bindsym $mod+Shift+y reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+x exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"



####################################
####################################
##			 	 ###
##		MODES 		 ###
##   				 ###
####################################
####################################

##
## Rezise
##
# resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink ehe window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

##
## Power Management (PM)
##
## Confirmation on any power management action is case insensitive
#bindsym $mod+Shift+p mode "$mode_pm"
#set $mode_pm Power Management: (p)oweroff, (r)eboot, (s)uspend, (h)ibernate, (z)hybrid-sleep
#mode "$mode_pm" {
        #bindsym p      exec systemctl poweroff 
        #bindsym r      exec systemctl reboot
        #bindsym s      exec systemctl suspend; mode "default"
        #bindsym h      exec systemctl hibernate; mode "default"
        #bindsym z      exec systemctl hybrid-sleep; mode "default"
        #bindsym Return mode "default"
        #bindsym Escape mode "default"
#}

##
## Gaps
##
## yeah, a copy this config from the internet but it is what I had in mind
## for gaps keybinding config, so why not? And I also added the "all" mode
## in order to control both outer and inner gaps at the same time
set $mode_gaps Gaps: (a)ll, (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_all All Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym a      mode "$mode_gaps_all"
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_all" {
        bindsym plus  gaps outer current plus 5; gaps inner current plus 5
        bindsym	minus gaps outer current minus 5; gaps inner current minus 5
        bindsym 0     gaps outer current set 0; gaps inner current set 0

        bindsym Shift+plus  gaps outer all plus 5; gaps inner all plus 5
        bindsym Shift+minus gaps outer all minus 5; gaps inner all minus 5;
        bindsym Shift+0     gaps outer all set 0; gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}




####################################
####################################
##			    	  ##
##	Quick Access Bindings	  ##
##   				  ##
####################################
####################################
set $quick_access_key Shift

# System
bindsym $mod+F2 exec power-manager
bindsym $mod+$quick_access_key+x exec copyq toggle

#bindsym $mod+$quick_access_key+y exec "rofi -modi 'clipboard:greenclip print' -show clipboard -run-command '{cmd}' ; sleep 0.5; xdotool type $(xclip -o -selection clipboard)"

#bindsym --whole-window $mod+button3 exec copyq menu
bindsym --whole-window $mod+button2 exec copyq menu

# Programs
bindsym $mod+$quick_access_key+m exec spotify
bindsym $mod+$quick_access_key+f exec firefox-bin
# bindsym $mod+$quick_access_key+b exec brave
bindsym $mod+$quick_access_key+w exec "firefoxpwa site launch 01HQ33KD6FTBGYGMA2T26K84K6 --protocol"
bindsym $mod+$quick_access_key+d exec discord
bindsym $mod+$quick_access_key+e exec alacritty --class ranger --title ranger -e zsh -ic "ranger"

# Screen
set $screenshots_dir ~/pictures/screenshots
bindsym $mod+$quick_access_key+z exec "flameshot gui -c -p ~/pictures/screenshots"
bindsym $mod+$quick_access_key+s exec "flameshot gui"
bindsym $mod+Print exec "flameshot full -p $screenshots_dir; thunar $screenshots_dir"

bindsym $mod+F1 exec --no-startup-id lockscreen
bindsym $mod+F7 exec --no-startup-id toggle-screenkey
bindsym $mod+F8 exec --no-startup-id toggle-picom

# Audio
bindsym $mod+F11 exec pavucontrol
bindsym $mod+F12 exec --no-startup-id alacritty --class pulsemixer --title pulsemixer -e zsh -ic "pulsemixer"


for_window [class="Pavucontrol"] floating enable
for_window [class="openrgb"] floating enable
for_window [class="Thunar"] floating enable
for_window [class="pulsemixer"] floating enable
# for_window [class="Sxiv"] floating enable
for_window [class="copyq"] floating enable
for_window [class="ranger"] floating enable


###################################################
###################################################
##			    	  	       	 ##
##	Automatic Client-Workspace Assignment  	 ##
##   				  	       	 ##
###################################################
###################################################
# assign [class="firefox"] $ws1
assign [class="Spotify"] $ws10
assign [class="discord"] $ws9
assign [class="crx_hnpfjngllnobngcgfapefoaidbinmjnm" instance="Brave-browser"] $ws8
assign [class="whatsapp"] $ws8
assign [class="WhatsApp Web"] $ws8
assign [class="WhatsApp"] $ws8

for_window [instance="Brave-browser"] move container to workspace8;
for_window [instance="Brave-browser"] move container to workspace8;
for_window [instance="Brave-browser"] move container to workspace8;
for_window [instance="Brave-browser"] move container to workspace8;
for_window [instance="Brave-browser"] move container to workspace8;


###################################################
###################################################
##			    	  	       	 ##
##	Automatic Screen-Workspace Assignment  	 ##
##   				  	       	 ##
###################################################
###################################################

# room
workspace $ws1 output DP-0
workspace $ws2 output DP-0
workspace $ws3 output DP-0

workspace $ws4 output DP-3
workspace $ws5 output DP-3
workspace $ws6 output DP-3

workspace $ws7 output HDMI-0
workspace $ws8 output HDMI-0
workspace $ws9 output HDMI-0
workspace $ws10 output HDMI-0

# office
# workspace $ws1 output HDMI-0
# workspace $ws2 output HDMI-0
# workspace $ws3 output HDMI-0
# 
# workspace $ws4 output DP-2
# workspace $ws5 output DP-2
# workspace $ws6 output DP-2
# 
# workspace $ws7 output DP-1
# workspace $ws8 output DP-1
# workspace $ws9 output DP-1
# workspace $ws10 output DP-1


#####################################################
#####################################################
##						   ##
##	Automatic App Launcing on i3 startup	   ##
##   				  	       	   ##
#####################################################
#####################################################
exec spotify


# PENDING:
#	- include MUTT here (email client)
#	- chage spotify to spotify-tui

###########################################################
###########################################################
##						  	 ##
##	          Window  Customizations		 ##
##						  	 ##
###########################################################
###########################################################
#
# BORDERS & TITLES
#
# the below is set cause sometimes I go stacking to tabbing mode 
# and title bars are visible in those modes
title_align center 
# doesn't show title bar on any window, but shows borders
default_border pixel 3
#default_border none

default_floating_border pixel
# shows borders only if there is more than one container
# on a workspace && there are no gaps set (gap size == 0)
hide_edge_borders smart_no_gaps
# if gap size > 0 show borders; else no borders at all
# smart_borders no_gaps

#
# GAPS
#
gaps inner 15
gaps outer 5
gaps top 0

# no gaps show when only one 1 window/split container on workspace
# smart_gaps on

# inverse_outer only enables outer gaps when there is exactly one
# window or split container on the workspace.
smart_gaps inverse_outer

#for_window [class="^.*"] border pixel 2
## class                 border  backgr. text    indicator child_border
#for_window [class="^.*"] client.focused          #77dd77 #285577 #ffffff #2e9ef4   #285577

###########################################################
###########################################################
##						  	 ##
##	                MISCELLANEOUS         		 ##
##						  	 ##
###########################################################
###########################################################
# So mouse doesn't go to center of windows when switching screens
mouse_warping none
# Jumnping back and forth of workspaces using same key
# used to change the workspace without having to think
# about where I come from, pretty goddamm useful

# Delay time taken from urgency state (red [<= if default] color around window) to reset after focusing
# respective workspace so that I have more time to see which window is demanding
# my attention
force_display_urgency_hint 800 ms
# ^^^ defaults to 500 ms


########################################################### 
###########################################################
##						  	 ##
##	              Audio Controls 			 ##
##						  	 ##
###########################################################
###########################################################

# Use pulsemixer to control audio volume (both input and output)
bindsym $mod+equal exec --no-startup-id "amc +system-volume"
bindsym $mod+minus exec --no-startup-id "amc -system-volume"
# bindsym --whole-window $mod+button9 exec --no-startup-id "amc +system-volume"
# bindsym --whole-window $mod+button8 exec --no-startup-id "amc -system-volume"
#
bindsym XF86AudioRaiseVolume exec --no-startup-id "amc +system-volume"
bindsym XF86AudioLowerVolume exec --no-startup-id "amc -system-volume"
bindsym XF86AudioMute exec --no-startup-id "amc toggle-mute-system-volume"
bindsym $mod+BackSpace exec --no-startup-id "amc toggle-mute-system-volume"

# bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
# bindsym $mod+i exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use playerctl to control PMRIS compatible audio players
exec --no-startup-id playerctld daemon
bindsym $mod+p exec --no-startup-id "amc play-pause-crrnt-player"
bindsym $mod+Shift+p exec --no-startup-id  "amc shift-player"
bindsym $mod+F9 exec --no-startup-id "amc toggle-shuffle-player"
bindsym $mod+F10 exec --no-startup-id "amc change-loop-player" 
bindsym $mod+bracketright exec --no-startup-id "amc next-track" 
bindsym $mod+bracketleft exec --no-startup-id "amc prev-track"
bindsym $mod+apostrophe exec --no-startup-id "amc seek-forward-track"
bindsym $mod+semicolon exec --no-startup-id "amc seek-backward-track" 
bindsym $mod+slash exec --no-startup-id "amc +player-volume"
bindsym $mod+period exec --no-startup-id "amc -player-volume" 
bindsym XF86AudioPlay exec --no-startup-id "amc play-pause-crrnt-player"
bindsym XF86AudioNext exec --no-startup-id "amc next-track"
bindsym XF86AudioPrev exec --no-startup-id "amc prev-track" 
bindsym XF86AudioStop exec --no-startup-id "amc stop-player" 

#bindsym $mod+bracketright exec --no-startup-id pulsemixer --change-volume +10
#bindsym $mod+bracketleft exec --no-startup-id pulsemixer --change-volume -10


###########################################################
###########################################################
##						  	 ##
##	              Mouse Behavior 			 ##
##						  	 ##
###########################################################
###########################################################
focus_follows_mouse no

###########################################################
###########################################################
##						  	 ##
##	              Font Conf 			 ##
##						  	 ##
###########################################################
###########################################################

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Hack 20
# font pango:DejaVu Sans Mono 11
#font pango:monospace 12
#font pango:monospace 8 <<<--- default font conf

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8

###########################################################
###########################################################
##						  	 ##
##	              Global Colors 			 ##
##						  	 ##
###########################################################
###########################################################

# set colors from Xresources (set by pywal)
set_from_resource $text-primary i3wm.color0 #ffffff
set_from_resource $text-secondary i3wm.color7 #000000
set_from_resource $primary i3wm.color2 #000000
set_from_resource $secondary i3wm.color0 #ffffff
set_from_resource $tertiary i3wm.color6 #ffffff
set_from_resource $softer-primary i3wm.color5 #ffffff
set_from_resource $warning i3wm.color7 #E5770E
set_from_resource $error i3wm.color8 #F21607

#set_from_resource $info i3wm.color0 #ffffff
#set_from_resource $success i3wm.color0 #ffffff

# class                 border      backgr.      text        	indicator      child_border
client.focused          $primary    $primary    $text-secondary $primary       $primary
client.focused_inactive $secondary  $primary    $text-secondary	$secondary     $secondary
client.unfocused        $secondary  $secondary  $text-secondary $primary       $primary
client.urgent           $secondary  $warning    $secondary  	$secondary     $secondary
client.placeholder      $primary    $primary    $text-primary  	$secondary     $secondary
client.background       $primary


###########################################################
###########################################################
##						  	 ##
##	              Program Launcher 			 ##
##						  	 ##
###########################################################
###########################################################
bindsym $mod+d exec --no-startup-id "rofi -show combi 


###########################################################
###########################################################
##						  	 ##
##	              Notis Daemon 			 ##
##						  	 ##
###########################################################
###########################################################
exec_always --no-startup-id "pkill dunst; dunst & disown"
bindsym $mod+F6 exec --no-startup-id toggle-disable-notifications
bindsym $mod+F5 exec --no-startup-id dunstctl action
bindsym $mod+n exec --no-startup-id dunstctl history-pop
bindsym $mod+$quick_access_key+n exec --no-startup-id dunstctl close


# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

###########################################################
###########################################################
##						  	 ##
##	              Status Bar 			 ##
##						  	 ##
###########################################################
###########################################################
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)

#i3 status (not cool)

bar {
        status_command i3status
        font pango:Hack 20
	position top
	tray_output primary
	workspace_buttons yes
	colors {
		background $secondary
		statusline $text-secondary
		separator $tertiary
		# focused_background $secondary
		# focused_statusline $text-secondary

#		colorclass	    border 		backgr.		text
		focused_workspace   $primary 		$primary	$secondary
		active_workspace    $tertiary 		$secondary 	$tertiary
		inactive_workspace  $secondary 		$secondary 	$tertiary
		urgent_workspace    $primary 		$warning 	$secondary
	}
}


