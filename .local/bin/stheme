#!/bin/bash


#					stheme (set theme)
# Just a utility to set global themes around all my system (rgb, wallpaper(s), colorschemes, spotify/spicetify theme).
# I should come up with a better name, the current one is pretty damm boring.
#
# IMPORTANT NOTES:
#  	- This only works with X (yeah, don't plan to support Wayland or any other(for now..))
#  	- To make it persistent just exceute this program whenever you start your 
#  	  X server (e.g in your .xinitrc)
#	- It assigns wallpapers by mapping argument number with screen monitor. (fot now...)
#	- Colorsheme is set based on your first argument (i.e first wallpaper) (for now...)
#	- OpenRGB server running as daemon
#
# CURRENT STATE AND FUTURE FEATURES:
#	- Don't plan to add features right now, but when I decide to add features I will 
#	probably add...
#		- Fix error when bad args are passed
#		- More fine grained contro over screen-to-wallpaper mapping (should probably 
#		do some more hackerman argument parsing)
#		- Make it possible to select which file/wallpaper to use to create the
#		colorscheme
#		- Make OpenRGB OPTIONAL so users and opt out/in of it (depending if
#		it tries to sync PyWal and OpenRGB by default or not)
#		- Make it so that if no ~/.fegbg was found then use colors
#		from pywal colorscheme to generate background on every X
#		screen
#		
# DEPENDENCIES:
# 	
# 	- pywal
# 	- feh
# 	- openrgb
# 	- swo (sync pywal and openrgb)
#
#
# USAGE EXAMPLE:
#
#	theme setter wal1.png wal2.png
#
# This way wal1.png is set on your display 0 (check this with 'xrandr --listmonitors")
# and wal2.png is set on your display 1 (and so on with every argument and every display).
#
#
# PENDING: 
# 	- receive argument to get if $1 is dark enough
# 	to saturate pywal behavior so OpenRGB colors are brighter
# 	- Add support for a more fine grained feh bg conf (output, and
# 	bg mode (tiled, fill, center) 

type feh > /dev/null || {
	echo "Need feh installed to work :'v"
	exit 1
	}
type wal > /dev/null || {
	echo "Need pywal installed to work :'v"
	exit 1
	}	
type swo > /dev/null || {
	echo "Need swo installed to work :'v"
	exit 1
}


[ -z $1 ] && { 
	~/.fehbg || {
		echo "No wallpaper previously confed with feh (no ~/.fehbg present)"
		echo "Pls cofig wallpaper with feh previously or argument a file image to this command"
		exit 1
	}
	wal -nR # -n so bg doesnt change and keep bg confed by feh
	swo &
	exit 0
}

[ $1 = "-h" ] && {
	echo "Usage: theme-setter [FILES...]"
	echo "Description: assign wallpaper by mapping argument number with screen monitor."
	echo "Check for screen numbers with \"xrandr --listmonitors\""
	exit 0
}




wal -n -i "$1"  -o swo &
feh --bg-fill "$@" && echo "[INFO]: Succesfully set wallpaper(s)"
swo && echo "[INFO]: Succesfully synced pywal & openrgb"

type spicetify > /dev/null && {
	spicetify apply && {
		echo "[INFO]: Succesfully re-applied spicetify theme" 
		echo "[INFO]: Re-opening spotify client" &
		sleep 2 
		# ^^^ Above sleep is necessary so spotify-launcher
		# actually opens. Why does this happen??? Don't exactly know
		# but discovered while trying do debug the fact that spotify
		# didn't launch after "spicetify update". It might be some
		# internal race condition happening at the spotify client app,
		(spotify-launcher 1> /dev/null 2>&1 &) && echo "[INFO]: Succesfully opened spotify client" 
		exit 0
	}
	echo "[ERROR]: Couldn't re-apply spicetify theme" 
	exit 1
}


